version: "3.8"
 
services:
  django:
    build: ./Django_Project
    container_name: Django
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    volumes:
      # - ./Django_Project:/usr/src/app
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/media
    ports:
      - 8000:8000
    expose:
      - 8000
    ports:
      - 8000:8000
    env_file:
      # 開発用
      - ./env/.env.dev
      # 本番用
      # - ./env/.env.proc
    depends_on:
      - phpmyadmin

  # Realアプリ用MySQL
  mysql:
    build: ./MySQL
    container_name: MySQL8
    volumes:
      # - mysql_data:/var/lib/mysql
      - ./MySQL/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./logs/MySQL:/var/log/mysql
    env_file:
      # 開発用
      - ./env/.envmysql.dev
      # 本番用
      # - ./env/.envmysql.proc
    restart: always

  # Realアプリ用phpMyAdmin
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpMyAdmin
    env_file:
      # 開発用
      - ./env/.envphpmyadmin.dev
      # 本番用
      # - ./env/.envphpmyadmin.proc
    ports:
      - "127.0.0.1:3000:80"
    # depends_on: 
    #   - mysql
    # restart: always
    links :
      - mysql

  # Loginアプリ用MySQL
  # mysql_login:
  #   build: ./MySQL
  #   container_name: MySQL8_login
  #   volumes:
  #     # - mysql_data:/var/lib/mysql
  #     - ./MySQL/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
  #     - ./logs/MySQL:/var/log/mysql
  #   env_file:
  #     # 開発用
  #     - ./env/.envmysql_login.dev
  #     # 本番用
  #     # - ./env/.envmysql_login.proc
  #   restart: always

  # # Loginアプリ用phpMyAdmin
  # phpmyadmin_login:
  #   image: phpmyadmin:latest
  #   container_name: phpMyAdmin_login
  #   env_file:
  #     # 開発用
  #     - ./env/.envphpmyadmin_login.dev
  #     # 本番用
  #     # - ./env/.envphpmyadmin_login.proc
  #   ports:
  #     - "127.0.0.1:4000:80"
  #   # depends_on: 
  #   #   - mysql_login
  #   # restart: always
  #   links :
  #     - mysql_login

  apache:
    build: ./Apache-PHP
    container_name: Apache-PHP
    volumes:
      - static_volume:/home/app/web/static
      - media_volume:/home/app/web/media
    ports:
      - 80:80
    depends_on:
      - django


volumes:
  mysql_data:
    driver_opts:
      type: none
      device: ./MySQL/DataBase
      o: bind
  # pgadmin4:
  static_volume:
  media_volume:
